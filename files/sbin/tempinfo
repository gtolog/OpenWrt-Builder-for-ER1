#!/bin/sh

. /etc/openwrt_release

IEEE_PATH="/sys/class/ieee80211"
THERMAL_PATH="/sys/class/thermal"

wifi_temp=""
cpu_temp=""
overal_temp=""

# WiFi 温度读取
case "$DISTRIB_TARGET" in
	ipq40xx/*|ipq806x/*)
		wifi_temp="$(cat $IEEE_PATH/phy*/device/hwmon/hwmon*/temp1_input 2>/dev/null | awk '{printf("%.1f°C ", $1 / 1000)}' | xargs)"
		;;
	mediatek/mt7622)
		wifi_temp="$(cat $IEEE_PATH/wl*/hwmon*/temp1_input 2>/dev/null | awk '{printf("%.1f°C ", $1 / 1000)}' | xargs)"
		;;
	*)
		wifi_temp="$(cat $IEEE_PATH/phy*/hwmon*/temp1_input 2>/dev/null | awk '{printf("%.1f°C ", $1 / 1000)}' | xargs)"
		;;
esac

# 特殊处理 mt76 驱动
if [ "$DISTRIB_TARGET" = "ipq40xx/generic" ] && [ -r "$IEEE_PATH/phy0/hwmon0/temp1_input" ]; then
	mt76_temp="$(awk '{printf("%.1f°C", $1 / 1000)}' "$IEEE_PATH/phy0/hwmon0/temp1_input")"
	[ -n "$mt76_temp" ] && wifi_temp="${wifi_temp:+$wifi_temp }$mt76_temp"
fi

# Qualcomm NSS 架构温度（优先cluster，其次nss-top，再次cpu均值）
case "$DISTRIB_TARGET" in
	qualcommax/*)
		overal_temp="$(for type_file in /sys/devices/virtual/thermal/ther*/type; do
			zone_dir="${type_file%/*}"
			[ -f "$zone_dir/temp" ] || continue
			label=$(awk '{gsub(/(wcss-|-thermal)/,""); print $1}' "$type_file")
			temp=$(cat "$zone_dir/temp")
			awk -v label="$label" -v temp="$temp" 'BEGIN { printf "%s %.1f\n", label, temp / 1000 }'
		done | awk '
			{
				if ($1 == "cluster") cluster = $2
				else if ($1 == "nss-top") nss_top = $2
				else if ($1 ~ /^cpu[0-9]+$/) {
					cpu_sum += $2
					cpu_count++
				}
			}
			END {
				if (cluster != "") printf("%.1f°C\n", cluster)
				else if (nss_top != "") printf("%.1f°C\n", nss_top)
				else if (cpu_count > 0) printf("%.1f°C\n", cpu_sum / cpu_count)
				else print "N/A"
			}')"
		;;
	*)
		cpu_temp="$(awk '{printf("%.1f°C", $1 / 1000)}' "$THERMAL_PATH"/thermal_zone0/temp 2>/dev/null)"
		;;
esac

# 输出组合逻辑
if [ -n "$overal_temp" ]; then
	echo -n "$overal_temp"
elif [ -n "$cpu_temp" ] && [ -z "$wifi_temp" ]; then
	echo -n "CPU: $cpu_temp"
elif [ -z "$cpu_temp" ] && [ -n "$wifi_temp" ]; then
	echo -n "WiFi: $wifi_temp"
elif [ -n "$cpu_temp" ] && [ -n "$wifi_temp" ]; then
	echo -n "CPU: $cpu_temp, WiFi: $wifi_temp"
else
	echo -n "N/A"
fi
