diff --git a/modules/luci-base/po/zh_Hans/base.po b/modules/luci-base/po/zh_Hans/base.po
index 7eb609ce0f..4097e20181 100644
--- a/modules/luci-base/po/zh_Hans/base.po
+++ b/modules/luci-base/po/zh_Hans/base.po
@@ -12514,3 +12514,11 @@ msgstr "{example_nx} 返回 {nxdomain}。"
 #: modules/luci-compat/luasrc/view/cbi/delegator.htm:20
 msgid "« Back"
 msgstr "« 后退"
+
+#: modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js:96
+msgid "Performance Overview"
+msgstr "性能概览"
+
+#: modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js:100
+msgid "Temperature"
+msgstr "当前温度"
diff --git a/modules/luci-base/root/usr/share/rpcd/ucode/luci b/modules/luci-base/root/usr/share/rpcd/ucode/luci
index e104225d0f..f736436466 100644
--- a/modules/luci-base/root/usr/share/rpcd/ucode/luci
+++ b/modules/luci-base/root/usr/share/rpcd/ucode/luci
@@ -585,6 +585,60 @@ const methods = {
 
 			return { result: ports };
 		}
+	},
+
+	getCPUInfo: {
+		call: function() {
+			if (!access('/sbin/cpuinfo'))
+				return {};
+
+			const fd = popen('/sbin/cpuinfo');
+			if (fd) {
+				let cpuinfo = fd.read('all');
+				if (!cpuinfo)
+					cpuinfo = '?';
+				fd.close();
+
+				return { cpuinfo: cpuinfo };
+			} else {
+				return { cpuinfo: error() };
+			}
+		}
+	},
+	
+	getPerformanceOverview: {
+		call: function() {
+			const fd = popen(access('/sbin/performanceoverview') ? '/sbin/performanceoverview' : 'top -n1 | awk \'/^CPU/ {printf("%d%", 100 - $8)}\'')
+			if (fd) {
+				let overview = fd.read('all');
+				if (!overview)
+					overview = '?';
+				fd.close();
+
+				return { overview: overview };
+			} else {
+				return { overview: error() };
+			}
+		}
+	},
+
+	getTempInfo: {
+		call: function() {
+			if (!access('/sbin/tempinfo'))
+				return {};
+
+			const fd = popen('/sbin/tempinfo');
+			if (fd) {
+				let tempinfo = fd.read('all');
+				if (!tempinfo)
+					tempinfo = '?';
+				fd.close();
+
+				return { tempinfo: tempinfo };
+			} else {
+				return { tempinfo: error() };
+			}
+		}
 	}
 };
 
diff --git a/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js b/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
index 45f7b4acae..186bfeaf75 100644
--- a/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
+++ b/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
@@ -18,6 +18,21 @@ var callSystemInfo = rpc.declare({
 	method: 'info'
 });
 
+var callCPUInfo = rpc.declare({
+	object: 'luci',
+	method: 'getCPUInfo'
+});
+
+var callPerformanceOverview = rpc.declare({
+	object: 'luci',
+	method: 'getPerformanceOverview'
+});
+
+var callTempInfo = rpc.declare({
+	object: 'luci',
+	method: 'getTempInfo'
+});
+
 return baseclass.extend({
 	title: _('System'),
 
@@ -25,6 +40,9 @@ return baseclass.extend({
 		return Promise.all([
 			L.resolveDefault(callSystemBoard(), {}),
 			L.resolveDefault(callSystemInfo(), {}),
+			L.resolveDefault(callCPUInfo(), {}),
+			L.resolveDefault(callPerformanceOverview(), {}),
+			L.resolveDefault(callTempInfo(), {}),
 			L.resolveDefault(callLuciVersion(), { revision: _('unknown version'), branch: 'LuCI' })
 		]);
 	},
@@ -32,7 +50,10 @@ return baseclass.extend({
 	render: function(data) {
 		var boardinfo   = data[0],
 		    systeminfo  = data[1],
-		    luciversion = data[2];
+		    cpuinfo     = data[2],
+		    performanceoverview    = data[3],
+		    tempinfo    = data[4],
+		    luciversion = data[5];
 
 		luciversion = luciversion.branch + ' ' + luciversion.revision;
 
@@ -54,7 +75,7 @@ return baseclass.extend({
 		var fields = [
 			_('Hostname'),         boardinfo.hostname,
 			_('Model'),            boardinfo.model,
-			_('Architecture'),     boardinfo.system,
+			_('Architecture'),     cpuinfo.cpuinfo || boardinfo.system,
 			_('Target Platform'),  (L.isObject(boardinfo.release) ? boardinfo.release.target : ''),
 			_('Firmware Version'), (L.isObject(boardinfo.release) ? boardinfo.release.description + ' / ' : '') + (luciversion || ''),
 			_('Kernel Version'),   boardinfo.kernel,
@@ -66,6 +87,16 @@ return baseclass.extend({
 				systeminfo.load[2] / 65535.0
 			) : null
 		];
+		
+		if (performanceoverview.overview) {
+		    fields.push(_('Performance Overview'));
+		    fields.push(performanceoverview.overview);
+		}
+		
+		if (tempinfo.tempinfo) {
+		    fields.push(_('Temperature'));
+		    fields.push(tempinfo.tempinfo);
+		}
 
 		var table = E('table', { 'class': 'table' });
 
@@ -78,4 +109,4 @@ return baseclass.extend({
 
 		return table;
 	}
-});
+});
\ No newline at end of file
